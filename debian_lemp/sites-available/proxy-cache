# By default, NGINX respects the Cache-Control headers from origin servers. It does not cache responses with Cache-Control set to Private, No- Cache, or No-Store or with Set-Cookie in the response header. NGINX only caches GET and HEAD client requests. You can override these defaults as described in the answers below.

http {
	# Proxy servers
	upstream backend {		
		ip_hash;
		server 127.0.0.1:9999 max_conns=100;
		server 127.0.0.1:8888 max_conns=100;
	}

	# Enable cache zone
	proxy_cache_path /tmp/nginx/cache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=30m use_temp_path=off;

	server {

		listen 80;
		server_name localhost;
		root /var/www/html/nginx

		#Don't cache if there is a cookie called PHPSESSID
		if ($http_cookie = "PHPSESSID")
		{
			# set $no_cache 1;
		}

		location / {
			# Proxy server
			proxy_pass http://localhost:8080;

			# Proxy balancer
			# proxy_pass http://backend;

			# Add cache zone
			proxy_cache my_cache;
			proxy_cache_valid any 5m;			
			proxy_cache_min_uses 2;

			# Settings			
			proxy_cache_key "$host$request_uri$cookie_user";
			proxy_cache_methods GET HEAD POST;			
			add_header X-Cache $upstream_cache_status;

			# Enable caching, ignore proxy headers
			# proxy_ignore_headers Cache-Control;
			# proxy_ignore_headers Set-Cookie;

			# Tuning
			# proxy_cache_revalidate on;
	        # proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
	        # proxy_cache_background_update on;
	        # proxy_cache_lock on;	        
	        # # proxy_cache_key $proxy_host$request_uri$cookie_phpsessionid;
	        # # proxy_cache_key "$http_x_auth_token$request_uri";

	        # Clean cache
			proxy_cache_purge $purge_method;
		}

		location ~ \.php$ {
			# if file not exist
			try_files $uri =404;

			# Php-fpm
			fastcgi_pass unix:/run/php/php7.3-fpm.sock;
			fastcgi_index index.php;
			include fastcgi_params;			

			# Enable php cache
			fastcgi_cache my_cache;
			fastcgi_cache_valid 200 5m;
			fastcgi_cache_min_uses 2;
		}

		location /nocache {
			add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
			expires off;
		}

		location /purge-cache {
			# Clear cache
			proxy_cache_path /tmp/nginx/cache levels=1:2 keys_zone=my_cache:10m purger=on;
		}
	}

	# Clear cache: curl -X PURGE -D â€“ "http://www.example.com/*"
	map $request_method $purge_method {		
		PURGE 1;
		default 0;

		# Or with geo
		# PURGE   $purge_allowed;		
	}

	geo $purge_allowed {
		default         0;  # deny from other
		10.0.0.1        1;  # allow from localhost
		192.168.0.0/24  1;  # allow from mask/24
	}
}